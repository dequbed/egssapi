{erl_opts, [debug_info, {src_dirs, ["src"]}]}.

{plugins, [pc, rebar3_hex
%, {cmake, {git, "git://github.com/la7dja/rebar3-cmake-plugin.git", {branch, "master"}}}
]}.

{pc_clang_db, true}.
{provider_hooks,
 [{pre,
   [{compile, {pc, compile}},
    {clean, {pc, clean}}]}]}.

% Since we have given the target as a .so this will compile as `drv`. 
% Which is almost correct so we don't have to override that.
%{cmake_opts, [{c_src, "c_src"}, {c_build, "target/priv"}]}.
{port_specs, [{"target/priv/egssapi_nif.so", ["c_src/*.c"]}]}.

% The port driver will call compilation and linking for `drv` as:
% $CC -c $CFLAGS $DRV_CFLAGS $PORT_IN_FILES -o $PORT_OUT_FILE
% and
% $CC $PORT_IN_FILES $LDFLAGS $LDLIBS $DRV_LDFLAGS -o $PORT_OUT_FILE
% respectively.
% Default {C,LD}FLAGS for `drv` are:
% DRV_CFLAGS: -g -Wall -fPIC -MMD $ERL_CFLAGS
% DRV_LDFLAGS: -shared $ERL_LDFLAGS
% Where ERL_{C,LD}FLAGS are for including and linking libei and erts
{port_env, [ {"CC", "clang"}
           % Hi yes I'd like to take control of my compilation options
           , {"CFLAGS", "-Wall -fPIC -MMD -O2"}
           % We have to override DRV_CFLAGS to get rid of -g
           , {"DRV_CFLAGS", "$ERL_CFLAGS"}
           % LDLIBS has no default definition, not setting it will fail to link
           , {"LDLIBS", "-lkrb5 -lgssapi_krb5"}
           ]}.

{deps, []}.
